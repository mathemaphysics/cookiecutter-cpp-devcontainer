{
	"name": "{{cookiecutter.project_name}} Development",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
		    "DEVUSER": "devuser",
		    "DEVUID": "1000"
		}
	},
	"runArgs": [], // ["--network=host", "--gpus=all", "-e", "NVIDIA_DRIVER_CAPABILITIES=all"]

	// Add the IDs of extensions you want installed when the container is created.
	"customizations": {
	    "vscode": {
	        // Set *default* container specific settings.json values on container create.
	        "settings": {
		},

		// All extensions for C++ put here
	        "extensions": [
			"ms-vscode.cpptools",
			"jeff-hykin.better-cpp-syntax",
			"ms-vscode.cpptools-themes",
			"ms-vscode-remote.remote-containers",
			"ms-vscode-remote.remote-ssh",
			"tibotix.definition-autocompletion",
			"ms-vscode.cmake-tools",
			"twxs.cmake",
			"ms-vscode.cpptools-extension-pack",
			"danielpinto8zz6.c-cpp-project-generator",
			"novaturion.cpp-classes-creator",
			"donjayamanne.githistory",
			"felipecaputo.git-project-manager",
			"eamodio.gitlens",
			"austin.code-gnu-global",
			"mhutchie.git-graph",
			"huizhou.githd",
			"github.codespaces",
			"gitpod.gitpod-desktop",
			"gitpod.gitpod-remote-ssh",
			"github.vscode-pull-request-github",
			"ms-vsliveshare.vsliveshare",
			"ms-vsliveshare.vsliveshare-audio",
			"ms-azuretools.vscode-docker",
			"isaias.doxygen-pack",
			"gaborv.flatbuffers",
			"hbenl.vscode-test-explorer",
			"novaturion.cpp-classes-creator",
			"matepek.vscode-catch2-test-adapter",
			"go2sh.cmake-integration-vscode",
			"mischelebuha.cmake-extension-pack",
			"ms-iot.vscode-ros",
			"wayou.vscode-todo-highlight",
			"Gruntfuggly.todo-tree"
		]
	    }
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "gcc -v",

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "devuser",

	"remoteEnv": {
{%- if cookiecutter.container_mount_xorg == "Yes" %}
		"DISPLAY": "${localEnv:DISPLAY}",
		"XAUTHORITY": "/home/devuser/.Xauthority"
{%- endif %}
	},

	// Maps the .ssh/ folder from your ${HOME} into /home/devuser/.ssh
	"mounts": [
{%- if cookiecutter.container_mount_ssh == "Yes" %}
		"source=${localEnv:HOME}/.ssh,target=/home/devuser/.ssh,type=bind,consistency=cached",
{%- endif %}
{%- if cookiecutter.container_mount_xorg == "Yes" %}
		"source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind",
		"source=${localEnv:XAUTHORITY},target=/home/devuser/.Xauthority,type=bind",
{%- endif %}
{%- if cookiecutter.docker_in_docker == "Yes" %}
		"source=//var/run/docker.sock,target=/var/run/docker.sock,type=bind", 
{%- endif %}
	]
}
