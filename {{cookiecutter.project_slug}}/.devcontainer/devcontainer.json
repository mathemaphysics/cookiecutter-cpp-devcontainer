// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.205.1/containers/cpp
{
	"name": "{{cookiecutter.project_name}} Development",
	"build": {
		"dockerfile": "Dockerfile",
		"args": { "DEVUSER": "devuser", "DEVUID": "1000" }
	},
	{%- if cookiecutter.setup_ros_variables == "Yes" %}
	"runArgs": ["--network=host",{{cookiecutter.docker_extra_runargs}}], // Mightn't work for Win
	{%- else %}
	"runArgs": [{{cookiecutter.docker_extra_runargs}}],
	{%- endif %}

	// Set *default* container specific settings.json values on container create.
	"settings": {},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-vscode.cpptools",
		"jeff-hykin.better-cpp-syntax",
		"ms-vscode.cpptools-themes",
		"ms-vscode-remote.remote-containers",
		"ms-vscode-remote.remote-ssh",
		"tibotix.definition-autocompletion",
		"ms-vscode.cmake-tools",
		"twxs.cmake",
		"ms-vscode.cpptools-extension-pack",
		"danielpinto8zz6.c-cpp-project-generator",
		"novaturion.cpp-classes-creator",
		"donjayamanne.githistory",
		"felipecaputo.git-project-manager",
		"eamodio.gitlens",
		"austin.code-gnu-global",
		"mhutchie.git-graph",
		"huizhou.githd",
		"github.codespaces",
		"gitpod.gitpod-desktop",
		"gitpod.gitpod-remote-ssh",
		"github.vscode-pull-request-github",
		"ms-vsliveshare.vsliveshare",
		"ms-vsliveshare.vsliveshare-audio",
		"ms-azuretools.vscode-docker",
		"isaias.doxygen-pack",
		"gaborv.flatbuffers",
		"hbenl.vscode-test-explorer",
		"novaturion.cpp-classes-creator",
		"matepek.vscode-catch2-test-adapter",
		"Gruntfuggly.todo-tree",
		"wayou.vscode-todo-highlight"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "gcc -v",

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "devuser",

	"remoteEnv": {
	{%- if cookiecutter.container_mount_xorg == "Yes" %}
	{%- if cookiecutter.os_is_wsl == "Yes" %}
		"DISPLAY": "host.docker.internal:0.0" // Point to host machine's Xorg
	{%- else %}
		"DISPLAY": "${localEnv:DISPLAY}",
		"XAUTHORITY": "/home/devuser/.Xauthority"
	{%- endif %}
	{%- endif %}
	{%- if cookiecutter.setup_ros_variables == "Yes" %}
		"ROS_IP": "{{cookiecutter.ros_ip_address}}",
		"ROS_MASTER_URI": "{{cookiecutter.ros_master_uri}}",
	{%- endif %}
		"QT_AUTO_SCREEN_SCALE_FACTOR": "1"
	},

	// Maps the .ssh/ folder from your ${HOME} into /home/devuser/.ssh
	"mounts": [
	{%- if cookiecutter.container_mount_ssh == "Yes" %}
		"source=${localEnv:HOME}${localEnv:USERPROFILE/.ssh,target=/home/devuser/.ssh,type=bind,consistency=cached",
	{%- endif %}
	{%- if cookiecutter.docker_in_docker == "Yes" %}
		"source=//var/run/docker.sock,target=/var/run/docker.sock,type=bind",
	{%- endif %}
	{%- if cookiecutter.container_mount_xorg == "Yes" %}
	{%- if cookiecutter.os_is_wsl != "Yes" %}
		// Assumes this is an Ubuntu/Debian image; generalize it
		"source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind",
		"source=${localEnv:XAUTHORITY},target=/home/devuser/.Xauthority,type=bind"
	{%- endif %}
	{%- endif %}
	]
}
